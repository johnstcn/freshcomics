// Code generated by go-bindata.
// sources:
// web/templates/admin_details.gohtml
// web/templates/admin_footer.gohtml
// web/templates/admin_header.gohtml
// web/templates/admin_index.gohtml
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admin_detailsGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x7b\x6f\xdb\x36\x10\xff\x3f\x9f\xe2\xca\x0d\x85\xbd\xce\xb2\x53\xb4\xc3\x90\x58\x2a\x8a\x66\x45\x57\xa4\x69\x60\x27\x68\x81\x22\x28\x68\xeb\x64\xb3\xa5\x29\x83\xa4\x12\x67\x9e\xbf\xfb\xc0\x87\x5e\xae\xe2\xc6\x43\xdc\x79\xf9\xc3\xe1\xe3\x1e\xbf\xfb\xe9\x78\x94\xc8\xe5\x12\x62\x4c\x98\x40\x20\x34\x9e\x31\xf1\x39\x46\x4d\x19\x57\x04\x56\xab\x83\xe5\x12\x34\xce\xe6\x9c\xea\x62\x7a\x8a\x34\x46\x69\x67\xfb\x31\xbb\x86\x31\xa7\x4a\x85\x64\x9c\x0a\x4d\x99\x40\xd9\x49\x78\xc6\x62\x12\x1d\x00\x00\xf4\xa7\x87\xd1\x72\x09\xc1\x90\x69\x3c\xc1\x24\x38\xa3\x33\x84\xd5\xaa\xdf\x9d\x1e\xe6\x02\xb2\xeb\x5a\xcb\x25\xb0\x04\x04\x42\xf0\x0e\x95\xa2\x13\x04\x62\x9d\x80\xff\x73\xf3\xc1\x30\x1b\x8f\x51\xa9\xea\x8c\xb5\x53\x81\x42\x39\x4a\x0d\xf6\xb7\xa3\x9c\x38\xb1\x28\x72\xc3\x06\x40\xcc\xae\xa3\xaa\x6d\xe4\x0a\xef\x6b\x34\xa6\x62\x82\xf2\x1e\x36\x45\x9c\x9b\xac\xf7\xaa\x86\x65\x7a\x43\x4a\xad\x3a\xa5\xbc\xa3\x66\x9d\xdf\x2b\xd3\xeb\x22\x73\x2a\x90\x83\xfd\xed\xcc\x25\x9b\x51\x79\xbb\x26\xdd\xa8\xd1\x31\x0f\x91\x89\x09\x89\x4e\xcc\xa3\x67\x9a\xa5\x62\x0d\xfe\xdd\xba\xa3\x34\x6e\x72\x62\x85\x93\x54\xce\x60\x86\x7a\x9a\xc6\x21\x39\x7f\x3f\xbc\x20\xc0\xe2\x90\x28\xa6\x31\xc6\xe4\xb3\x99\x26\x40\xc7\xc6\x5f\x48\xba\x7e\xf8\x05\x8b\xc3\x6a\x92\xfc\x79\x02\xab\xd5\x1d\x1e\xd6\x21\x19\x8b\x9d\x89\x4c\xb3\xf9\x06\x05\xab\xc4\xe9\x08\x79\x35\x5b\x65\xca\x3b\x76\x90\x40\x92\xca\x12\xa4\xa0\x33\x24\x91\xc9\xd4\xa3\x7e\xd7\x0a\x7c\xc7\x32\x13\xf3\x4c\xd7\x00\x79\xf3\x04\xf4\xed\x1c\x43\xa2\x71\xa1\xeb\x44\x58\x1f\x60\x7e\x43\xe2\xda\xd7\x94\x67\x18\x92\x86\xc5\xb2\x89\x89\xe6\x67\xf6\xa3\x88\x52\xc9\x0d\x89\xce\x86\xaf\x3f\xbc\x78\x20\xa2\xc6\x53\x1c\x7f\x1d\xa5\x8b\x35\xb2\x8c\x9f\x9c\x2c\xdb\xf6\x64\x69\x99\x21\x29\x0a\x43\xce\xda\xf0\xf5\x07\x58\xad\xc0\xda\xc2\xb8\x5c\x79\x0f\x15\xb6\x49\xdf\x6b\x24\xd1\x4b\xfb\x7f\xb7\xa1\x7b\x5f\x3e\xf8\xbc\xb7\x29\x7c\x87\x6a\x4b\x02\xfe\xdb\x3c\x52\x9a\x4a\x9d\x49\x4e\xa2\xa1\x69\xc1\xe5\xe0\xf4\xa1\x56\x9e\xb1\x5a\x23\xb4\xf0\xe5\x29\x2d\xfb\x0d\x0b\xd0\xc2\xb9\x1c\x9c\xee\xf3\x22\xe4\x54\x69\xff\xa4\x49\x74\x4a\x95\x86\x57\xae\xf7\x50\x14\xc6\x54\xa3\x66\xa6\x44\x55\x79\xac\xba\xf5\x54\xd6\x86\x1a\xd8\x34\xe0\x3c\x36\xf8\x1b\x72\xb3\xfb\xcc\x6d\x26\x79\xfe\xf6\x43\x22\x93\x07\x17\xbe\xb7\xbb\x8d\xa1\xea\xd2\xf3\x5a\x1b\x6a\xe0\xf5\x72\x70\x9a\xe3\xda\x67\x32\x25\x26\x8b\x39\xd5\x53\x12\x0d\x30\x81\x8f\xe7\x54\x4f\x77\x47\x63\xe1\xcc\x73\x58\xf6\x1b\x08\x1c\x60\xf2\xd1\x4c\xee\x39\x7b\x12\x27\xb8\x98\x3b\xfa\x06\xb6\xbd\x53\xfe\xbc\xbb\x92\xc0\x7c\xa0\x99\x41\x87\x68\x9f\x29\xd4\x4c\x73\xf4\x29\x78\x61\xda\xbb\x4e\xc2\x8a\x43\xcf\x62\x75\xa4\x81\x46\x8b\x6a\xef\x53\xd1\x06\x91\x27\xa3\x23\x72\xd7\xe9\x58\x75\x59\xa5\x72\x43\x4a\x5a\x60\xfb\x9f\x94\x66\x1b\xf4\x39\x79\x62\x0a\xf8\x8e\x53\xb2\x74\xe7\x69\xac\x0c\x34\x90\x68\x20\xd9\x7c\xdc\x63\x06\x2b\x95\xd1\x32\xb8\xeb\x5c\x34\x8c\xd5\x53\xb1\x3a\x72\x07\x89\xff\x8f\x44\x34\x66\xa9\xf6\x3c\xbe\xb6\x1d\x68\xbd\x4b\x05\xbc\xa5\x02\x9e\xc2\xe1\xf3\xa3\xde\xb3\xa3\xde\x73\x78\x37\xbc\x80\xa7\xbd\xde\x6f\xed\xdd\xb2\xec\xe1\x54\x58\xce\x47\xee\x60\xd9\x43\xfe\xf1\x2c\xd7\x02\x1c\x69\x01\x23\x2d\x3a\x23\x9e\x8e\xbf\xda\x56\x7e\x32\xe3\xa3\x55\xd9\x68\xc6\xca\x28\x86\xae\xfb\xaf\x20\xf7\xbb\x06\x64\xc3\xa9\xcd\xb7\x2a\x6b\x43\xeb\xdd\xfa\xb9\x13\xf8\xb3\xa7\x67\xf7\x3c\x7b\x8a\x31\xa1\x19\x6f\x0a\x62\xc3\xd9\xd3\x05\x2a\x0d\x03\x54\x19\xd7\xea\x41\x4e\x9f\x36\x1f\xd7\xd9\xfc\xd2\xa8\xf4\x67\x94\x32\x95\x04\x94\xbe\xe5\x26\xb1\x98\x9a\x73\x7a\x7b\x24\x52\x81\xc7\x24\xda\xc4\xf6\xb6\xc9\xf1\xfd\xe5\x67\xf1\x48\x4c\xec\x6b\xdd\xf7\x97\xd3\x36\x4b\xa9\x34\x7d\x47\xea\xfc\xf0\x38\xed\x37\xfe\xbd\xbe\xee\xb7\x8e\xd3\x9a\xde\x97\x38\xed\xbb\x89\x7f\x37\xda\x41\xac\xde\xfc\xbe\x44\x1b\xdb\xcf\xe3\x93\x7b\x7d\x16\x6f\x1d\xab\x33\xbe\x2f\xa1\x0a\x5c\xe8\x39\x9d\x20\x89\xce\x70\xa1\xe1\x9c\x4e\xf0\x7e\xa7\x55\x5b\xc7\x5d\x7a\xda\x7d\xec\xa3\x4c\xeb\x54\x94\xbe\x5d\x9f\xdc\xbd\x9f\x15\xd5\xde\x54\xf0\x7e\xd7\xc9\x6f\x05\x74\xab\xfd\xc9\x35\xfb\x8f\x3a\x1d\x08\xba\x32\xbd\x81\x4e\x27\x9f\x70\xbb\x5f\x45\xa0\x1b\x14\x17\x51\x56\xac\xaf\xc6\x92\xcd\x75\x85\xe4\xee\x17\x7a\x4d\xdd\x28\x89\x0e\x92\x4c\xd8\xdb\x08\x50\x28\x19\xe5\xec\x2f\xfb\x12\xd1\x6a\xc3\xd2\x7a\x48\x20\x84\x9f\x5b\xe4\xa7\xda\x05\x46\x3b\x28\x84\x5f\x4a\x49\x6f\x5b\x6d\x2b\x9b\x42\x08\x4b\x77\xbf\x93\xa4\x12\x5a\x2c\xec\x1d\x03\x83\x3e\x24\x01\x47\x31\xd1\xd3\x63\x60\x4f\x9e\xe4\x96\xad\xc6\xa7\xe4\x13\xbb\xfa\xe4\x6e\x00\xae\xae\x20\x04\xd7\xb7\x2f\x06\xe4\xea\xd8\x0a\x3a\x8b\x12\x75\x26\x05\xa4\x07\xab\x83\x0a\xe6\x69\x7a\xf3\x86\xc5\xf8\x87\xd9\xcf\x5a\xd2\xee\xa4\xb9\x7d\x94\xd2\x63\xaf\x6c\x79\x6d\x67\x92\x25\xe0\xa5\x03\xab\x0a\x8f\xc2\x10\x08\xa9\x42\x43\x29\x03\xc3\x56\x4d\xce\xab\xe7\xf3\xc6\x7d\xcb\x8f\xad\xdc\x05\x5a\xdd\xc0\x94\xc5\x58\x08\xd4\x90\x6b\x36\x43\xa5\xe9\x6c\x7e\x91\x5e\x5e\xbc\x1a\x6a\xc9\xc4\xa4\xa5\x55\x8e\xc0\x47\x2b\xf0\x06\x4c\x5d\x69\x69\x05\xbf\xc0\x61\xaf\xd7\x6b\x07\xba\xa2\xd0\x3e\xae\x19\x65\xea\x5c\xa2\x42\xa1\x5b\x7a\xca\xc4\x64\xcd\x98\x1b\xb4\xa1\x66\xc2\xdd\x78\xc6\xf0\xf8\x31\x94\xc3\x22\xe3\x7c\xcd\xe4\x8d\x64\x1a\x4d\x96\xbb\xd7\x94\x35\x8e\x1b\xf9\x2f\x29\x2e\xf1\x78\x12\x9d\x91\x76\x95\xe7\xe2\x01\x99\x8d\xba\x1d\x5c\x53\x5e\x17\x0e\x06\x98\x54\x68\x2f\xc4\xcd\x7e\xd7\x24\x7e\x39\x38\x6d\x12\x77\x5b\x46\x93\x82\xdd\xa4\x9a\x54\x6c\xe5\x6d\xd2\x38\xcf\x46\x9c\xa9\x29\xc6\x4d\x5a\x45\xdd\xaa\x69\x9a\x6a\x59\x22\xab\xa7\xc2\x88\x89\xd8\x30\xfc\x86\x8a\x98\xa3\x2c\x96\x5e\x61\xd2\x97\xa3\x76\x30\xe6\x6c\xfc\xb5\x95\x2b\xb6\x6a\x34\x06\xf4\x0b\x5d\xb4\x96\xb5\x8a\xe2\xee\x21\x8f\xc0\x5d\x44\xfe\x5a\x9b\xcb\x24\x3f\x82\xe2\x06\xb2\x6b\x1c\xad\x49\xc4\x54\xd3\xa3\xf5\xb2\x50\x48\xac\xda\x41\x9c\x0a\x2c\xd1\xd4\x33\x23\xff\x5b\xcf\x9f\xb7\xc3\xf7\x67\xc1\x9c\x4a\x85\xb9\x42\x85\xc4\x55\xce\x8f\x4d\xc2\x6f\x78\x39\x3e\xe8\x77\x5d\xdd\x8a\x9a\xee\xe5\x93\x34\xd5\xfe\x5e\xbe\xb8\xf1\xf9\x27\x00\x00\xff\xff\x70\x28\xff\xfc\xdc\x1f\x00\x00")

func admin_detailsGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_detailsGohtml,
		"admin_details.gohtml",
	)
}

func admin_detailsGohtml() (*asset, error) {
	bytes, err := admin_detailsGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_details.gohtml", size: 8156, mode: os.FileMode(436), modTime: time.Unix(1500041972, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_footerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4c\xc9\xcd\xcc\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\x52\xa8\xad\xe5\xb2\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x56\x48\xcd\x4b\x51\xa8\xad\x05\x04\x00\x00\xff\xff\x63\x72\x54\xe0\x35\x00\x00\x00")

func admin_footerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_footerGohtml,
		"admin_footer.gohtml",
	)
}

func admin_footerGohtml() (*asset, error) {
	bytes, err := admin_footerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_footer.gohtml", size: 53, mode: os.FileMode(436), modTime: time.Unix(1499954457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_headerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x6f\x53\xdb\xc6\x13\x7e\xcf\xa7\xd8\xdc\xef\x45\x7e\xa5\x95\x14\x30\xad\x29\xb1\x3c\x43\x0c\x01\x92\x26\x10\x30\xa4\x74\x3a\xd3\x59\xdf\xad\xa4\x33\xd2\x9d\xb8\x3b\xc9\x56\x1d\xbe\x7b\xe7\x2c\x0b\x63\x42\x67\xfa\x4a\xde\xff\xcf\xb3\xcf\x79\x17\x0b\x10\x94\x48\x45\xc0\x50\x14\x52\xfd\x95\x11\x0a\x32\x0c\x1e\x1e\xb6\x06\xaf\x8e\xce\x47\xe3\xdb\x8b\x63\xc8\x5c\x91\x0f\xb7\x06\xfe\x03\x39\xaa\x34\x66\xa4\xd8\x70\x0b\x60\xe0\xd3\xfd\x0f\x80\x41\x41\x0e\x81\x67\x68\x2c\xb9\x98\x55\x2e\x09\xf6\xd9\xd3\x50\xe6\x5c\x19\xd0\x7d\x25\xeb\x98\xfd\x1e\x5c\x1f\x06\x23\x5d\x94\xe8\xe4\x24\x27\x06\x5c\x2b\x47\xca\xc5\xec\xec\x38\x26\x91\xd2\x46\xa5\xc2\x82\x62\x56\x4b\x9a\x95\xda\xb8\x27\xc9\x33\x29\x5c\x16\x0b\xaa\x25\xa7\x60\x69\xfc\x04\x52\x49\x27\x31\x0f\x2c\xc7\x9c\xe2\x9d\xae\xd1\xab\x20\x80\x71\x46\x80\x13\x5d\x13\xf4\x60\xd9\xd8\x61\x6a\x61\xbb\xa8\xac\xdb\x06\xae\x0b\x82\x44\x1a\xeb\x40\x2a\x70\x19\x81\xe7\xf6\x16\x50\x35\xa0\x5d\x46\x66\x69\x77\xb3\xc1\x17\xb5\x35\xdb\x98\x38\x32\xdb\xbe\xc4\x52\xdb\x32\x08\xbe\x87\x2f\xc8\x72\x23\x4b\x27\xb5\x7a\xc2\xe0\x05\x9e\x58\xb9\x4c\x9b\x17\x72\x72\xa9\xee\xc0\x50\x1e\x33\xc9\x7d\x93\xcc\x50\x12\xb3\x30\x8c\xc2\x30\x4a\xb0\xf6\xce\x50\x72\xdd\xa5\x3b\xe9\x72\x1a\xbe\x37\x64\xb3\x91\x2e\x24\xb7\x30\x32\x38\xcb\xc9\x0c\xa2\x36\xb4\x5e\xcc\x3b\xad\x9d\x75\x06\x4b\xe0\xda\x10\x8c\xae\xae\xd6\x14\xd6\x53\xad\x6b\x72\xb2\x19\x91\xeb\x66\x7b\x49\xed\x41\x14\x15\x38\xe7\x42\x85\x93\xae\x8d\x37\xb8\x2e\xa2\x47\x47\xd4\x0b\x7b\x61\x3f\xe2\xd6\xae\x7d\x61\x21\x55\xc8\xad\x65\x20\x95\xa3\xd4\x48\xd7\xc4\xcc\x66\xd8\xdb\xdf\x0b\xde\xdd\xdc\x4a\x79\x75\xf6\x9e\x3e\xee\x88\x93\xe2\xc3\xe5\xe1\x5d\xc3\xab\xd3\xc3\xd3\xcb\xb4\xb7\x7b\x5e\x5c\xf3\xd9\xac\xaf\x55\xef\xf2\x56\xa4\x7b\x37\xf8\xe3\x45\x71\x35\xb6\x7f\x47\x1f\x7f\xd9\xaf\x27\xe2\x78\x9a\xed\x55\x0c\xb8\xd1\xd6\x6a\x23\x53\xa9\x62\x86\x4a\xab\xa6\xd0\x95\xed\x76\xd3\x4a\x01\xd6\xf0\x35\x09\x9c\xe2\x3c\x4c\xb5\x4e\x73\xc2\x52\xda\x25\x01\xef\x8b\x72\x39\xb1\xd1\xf4\xbe\x22\xd3\x44\x3b\xe1\xce\x6e\xb8\xb7\xb2\x96\x0c\xa6\x96\x0d\x07\x51\xdb\x70\xa3\xfb\x70\x26\x95\xd0\xb3\x70\xfa\xc5\xe7\xc2\xb7\x6f\x20\x34\xaf\x0a\x52\x2e\x9c\x19\xe9\xe8\xff\xaf\x37\x60\xb4\x3a\xa2\xb5\xe4\x6c\x34\xb5\x51\x4d\x4a\x68\xf3\xdd\xa4\x3f\xbb\x51\xaf\x7f\x78\x71\xea\x26\xa7\xff\x2a\xcc\xf4\xb9\x2e\xd3\x17\x65\x19\xf3\x9f\xcf\xbe\xc8\xc9\x9b\xdd\xfe\x7d\xdd\x4c\xaf\x3e\x25\xa7\xd3\xf3\x4f\xf8\xdb\x5d\x52\x7d\xbd\x99\xff\x31\xbf\xbe\x50\xa3\x0f\x87\xfd\x7c\xb7\x18\x7d\xfd\x7c\x56\x9e\xfc\x5a\x9c\x8c\x8e\xf6\x67\x27\x9f\xcf\xf8\xc5\x51\x7f\x3c\xc7\x7f\x97\xe5\x39\x17\xff\xd4\xc0\x35\x25\xc5\xcc\xd1\xdc\xf9\x97\xb3\xd2\x6e\xa2\x45\x03\x0b\x28\x51\x08\xa9\xd2\xc0\xe9\xf2\x00\xfa\x6f\xca\xf9\x5b\x78\x58\xc6\xa5\x2a\x2b\x07\x0b\x48\xb4\x72\x41\x82\x85\xcc\x9b\x03\x28\xb4\xd2\xb6\x44\x4e\x5d\xd6\x20\x5a\x8e\x58\xde\xb0\xa8\x3b\x62\x03\xdf\x7b\x85\x40\x61\x0d\x3c\x47\x6b\x63\xa6\xb0\x9e\xa0\x81\xf6\x13\x48\x55\x93\xb1\xd4\x99\x89\x9c\x93\xf0\x28\x56\xf0\x00\x06\x42\x3e\x96\xfa\xff\x30\x4a\x45\xe6\x31\xba\x19\x5f\x35\x59\x1d\xdd\x75\x8e\xc7\x52\x39\xa7\xd5\x6a\x07\xad\xc1\x9e\x95\x39\x9d\xa6\x39\x01\xd7\x79\x8e\xa5\x25\xc1\x40\xa0\xc3\x95\xdb\x0f\x6f\xfd\x9d\x1b\x4d\xea\x2f\xf3\xff\xda\x6a\x06\x68\x24\x06\x34\x2f\x51\x09\x12\x31\x4b\x30\xf7\xb9\x4b\xaf\xc7\x6d\x74\xfe\x38\x6a\x03\x9a\xd7\xa7\x44\xd5\x81\xb1\x26\xd0\x2a\x6f\xd8\x70\xdc\xc2\x51\x58\xcb\x14\xfd\x9d\x1b\x44\x3e\x6f\x83\x55\xd4\x32\xd9\xf0\xe1\x33\x5a\x13\x83\x4a\x74\x27\x26\x62\x2f\x9f\x30\x7c\xb2\xd0\x48\xc8\xfa\x71\xfb\x6b\x63\x10\x29\xac\x87\x5b\x8b\x05\x90\x12\xf0\xf0\xf0\x4f\x00\x00\x00\xff\xff\x83\xf4\x8a\x59\xec\x06\x00\x00")

func admin_headerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_headerGohtml,
		"admin_header.gohtml",
	)
}

func admin_headerGohtml() (*asset, error) {
	bytes, err := admin_headerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_header.gohtml", size: 1772, mode: os.FileMode(436), modTime: time.Unix(1499954457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_indexGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x3d\x6f\xdb\x30\x10\xdd\xfb\x2b\xae\xb7\xd3\x5a\x3a\x74\x90\xdc\xa1\x59\xba\xa4\x05\xd2\xbd\xa0\xcd\x93\x75\x00\x79\x54\xa9\x93\x93\x40\xd0\x7f\x2f\xa8\x38\x6e\x22\xb3\x31\x9a\x45\x38\xf1\xbd\xfb\x7e\xe4\x34\x81\xa3\x96\x85\x00\xad\x0b\x2c\xbf\x58\x1c\x3d\x20\xcc\xf3\x87\x69\x02\xa5\xd0\x7b\xab\x67\xb0\x23\xeb\x28\x2d\x28\x00\x40\xed\xf8\x08\x7b\x6f\x87\xa1\xc1\x7d\x14\xb5\x2c\x94\x70\xbb\x60\x6b\xbc\xb7\x42\x1e\x96\xaf\xe9\x13\x07\x9b\x1e\x5f\x30\x8b\x6c\x93\xd3\xb1\x1c\x70\xfb\x35\x51\xae\xe2\x96\xee\xe1\x8e\x95\x6e\xa8\xad\x2b\xc7\xc7\x6b\xfe\xbb\xe8\xd6\x49\xd6\xc4\x14\xef\x0b\x8c\x85\xd5\xc6\x14\x9e\x69\xd9\x36\x2c\x9e\x85\x10\x02\x69\x17\x5d\x83\x3f\xbe\xdf\xfd\x44\xb0\x7b\xe5\x28\x0d\x56\x03\x2b\x39\x6a\x2b\xa1\x7f\x85\xbc\x9c\x99\x37\x43\x30\x9f\xdf\xa0\x2f\x2e\x2c\xfd\xa8\x6b\x27\x58\x4e\xcd\x10\x10\x12\xfd\x1e\x39\x91\x03\x7d\xec\xa9\x41\xa5\x07\x45\x10\x1b\xa8\xc1\xfc\x45\xe8\xbd\xdd\x53\x17\xbd\xa3\xd4\xe0\x69\x82\x70\x9b\xa1\x37\x0a\xbd\x9c\xf0\x95\x3e\x3e\xfd\x57\x1f\x3b\x15\xd8\xa9\x9c\xc5\x70\x2a\x7e\x18\x77\x81\x15\xe1\x68\xfd\x48\x0d\x3e\x6d\xfe\x7d\x65\xd6\x55\x5e\x5b\x61\xff\x05\xed\xbc\x3e\x5a\xff\x76\xa9\x2a\xab\xfa\x52\x3e\x2f\x51\xcf\x83\x9a\x43\x8a\x63\x5f\x68\x60\x9a\x20\x59\x39\x10\x6c\x9e\xaf\xd3\xab\x30\xf6\x32\x88\x61\xa5\x80\xd0\x25\x6a\xff\xca\xed\x0b\xbb\x66\x9a\x60\xf3\xed\x06\xe6\x19\xb7\xd9\xcc\x8b\x85\x79\xae\x2b\x5b\xcc\x4a\xe2\xd6\x19\xeb\x6a\xf4\xc5\xee\x9f\xcc\xfa\xa3\x31\x50\x6d\xce\x57\x1c\x8c\xd9\x96\x9e\x87\x36\x46\x3d\x3d\x0f\xe7\x3c\x7f\x02\x00\x00\xff\xff\x3c\x8c\x63\x7f\x61\x04\x00\x00")

func admin_indexGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_indexGohtml,
		"admin_index.gohtml",
	)
}

func admin_indexGohtml() (*asset, error) {
	bytes, err := admin_indexGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_index.gohtml", size: 1121, mode: os.FileMode(436), modTime: time.Unix(1500042034, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin_details.gohtml": admin_detailsGohtml,
	"admin_footer.gohtml": admin_footerGohtml,
	"admin_header.gohtml": admin_headerGohtml,
	"admin_index.gohtml": admin_indexGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"admin_details.gohtml": &bintree{admin_detailsGohtml, map[string]*bintree{}},
	"admin_footer.gohtml": &bintree{admin_footerGohtml, map[string]*bintree{}},
	"admin_header.gohtml": &bintree{admin_headerGohtml, map[string]*bintree{}},
	"admin_index.gohtml": &bintree{admin_indexGohtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

