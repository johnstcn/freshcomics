// Code generated by go-bindata.
// sources:
// web/templates/admin_details.gohtml
// web/templates/admin_footer.gohtml
// web/templates/admin_header.gohtml
// web/templates/admin_index.gohtml
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admin_detailsGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x9a\x7b\x6f\x62\x37\x16\xc0\xff\xcf\xa7\x38\xf5\xae\x2a\xd8\x2e\x97\x64\xd4\xae\x56\x09\xb0\xaa\x26\x1d\xb5\x55\x66\x1a\x41\xa2\x56\x1a\x8d\x46\x06\x9f\x0b\xee\x18\xfb\xca\xf6\xcd\x63\x59\xbe\xfb\xca\x8f\xfb\x22\x17\x12\x46\xc3\x2c\x9b\x3f\xc8\xb5\x7d\x7c\x1e\x3f\x9f\x6b\x1b\x9b\xd5\x0a\x18\xa6\x5c\x22\x10\xca\x96\x5c\x7e\x64\x68\x29\x17\x86\xc0\x7a\x7d\xb2\x5a\x81\xc5\x65\x26\xa8\x2d\x9b\x17\x48\x19\x6a\xdf\x3a\x60\xfc\x0e\x66\x82\x1a\x33\x24\x33\x25\x2d\xe5\x12\x75\x2f\x15\x39\x67\x64\x74\x02\x00\x30\x58\x9c\x8d\x56\x2b\x48\x26\xdc\xe2\x25\xa6\xc9\x3b\xba\x44\x58\xaf\x07\xfd\xc5\x59\x21\xa0\xfb\xe1\x69\xb5\x02\x9e\x82\x44\x48\xde\xa2\x31\x74\x8e\x40\xbc\x11\x88\x7f\xa1\x3d\x99\xe4\xb3\x19\x1a\x53\x6f\xf1\x7a\x6a\xae\x50\x81\xda\x82\xff\xec\x99\x20\x4e\xbc\x17\x85\x62\xe7\x00\xe3\x77\xa3\xba\x6e\x14\x06\x5f\xaa\x94\x51\x39\x47\xfd\x02\x9d\x92\x15\x2a\x9b\xa5\xba\x62\xad\xee\x0b\x58\x0d\x9c\xa2\x67\x96\xbd\xb3\x57\xa4\xd2\x58\x6f\xcf\xa8\x44\x01\xfe\xb3\x97\x69\xbe\xa4\xfa\xb1\x26\xd9\x2a\xdd\x73\x23\xc7\xe5\x9c\x8c\x7e\xba\x43\x69\xcd\x86\xbf\xa1\x4f\x18\xfb\x8d\x5a\x4b\xa7\x02\x0b\x5d\xbe\xd0\x33\x56\xf3\x0c\x19\x84\xd2\x42\xdd\x39\x1e\x8d\x5e\xab\x15\x68\xc7\x09\x92\x60\xee\x09\x5c\xab\x47\x03\xcb\x3c\xc4\xd7\x1a\xa9\x45\x06\xff\x01\x46\x2d\x5a\x1e\x93\xc4\xb2\x52\xc2\xeb\xb8\x79\xcc\xea\x0d\x60\xec\xa3\xc0\x21\x49\x95\xb4\xbd\x94\x2e\xb9\x78\x3c\x87\xa5\x92\xca\x64\x74\x86\x17\xa4\xea\xf8\x8b\x4c\x55\xd9\xb1\x6f\xf5\x13\x4f\x6b\x63\x53\xfa\xd7\xf7\xb1\x6d\xa0\xe8\x3f\x21\x54\xc3\xb8\xe5\xb1\x75\xb0\xb7\x0c\xf8\x3f\x9f\x1b\xc5\x9d\x63\xfe\xcc\xb8\x5f\xba\xf7\x9c\x5b\xae\x64\xcb\xd8\xb7\xf7\x9d\x2a\xd6\x66\xc4\x0b\xa7\x4a\x2f\x61\x89\x76\xa1\xd8\x90\x5c\xff\x36\xb9\x21\xc0\xd9\x90\x18\x6e\x91\x61\xfa\xd1\x35\x13\xa0\x33\x67\x6f\x48\xfa\xb1\xba\x5f\x9f\x0e\x7e\xb9\x84\xf5\x7a\x8b\xfa\x4d\x7f\x9c\xba\xde\x5c\xab\x3c\xdb\xd1\xc1\x77\x12\x74\x8a\xa2\x3e\x2f\x69\x25\x7a\xbe\x92\x40\xaa\x74\xe5\xa1\xa4\x4b\x24\x23\x37\x27\x9d\x0f\xfa\x5e\xe0\x19\xcd\x5c\x66\xb9\x6d\x38\x14\xd5\x13\xb0\x8f\x19\x0e\x89\xc5\x07\xdb\xa4\xe0\x6d\x80\xfb\x1c\x92\xf0\x7c\x47\x45\x8e\x43\xd2\x32\x2d\xee\x22\xd1\x3e\x60\x5f\x0b\x94\x49\xef\xc9\xe8\xdd\xe4\xcd\xef\xff\xfa\x42\xa0\x66\x0b\x9c\x7d\x9a\xaa\x87\x0d\x58\xce\x4e\x01\xcb\x3f\x47\x58\x56\xe7\x48\xca\x25\xa0\xa0\x36\x79\xf3\x3b\xac\xd7\xe0\x75\x21\xab\xde\xe3\x2f\x15\xb6\xcb\xdd\x3b\x24\xa3\x1f\xfd\xff\xc3\x86\x1e\x6d\xc5\xe0\x8b\xd2\xae\xf0\x83\x57\x7b\x02\xf8\xdf\xe6\x91\xb1\x54\xdb\x5c\x0b\x32\x9a\xb8\x27\xb8\x1d\x5f\x7d\xa9\x37\xcf\x69\x6d\x00\x2d\x6d\x45\xa4\x55\xb9\xe5\x05\xf4\xee\xdc\x8e\xaf\x8e\xf9\x25\x14\xd4\xd8\x38\xd2\x64\x74\x45\x8d\x85\xd7\xa1\xf4\xa5\x10\x16\x6b\x6f\x93\x63\xdd\x6c\x44\xd9\xa8\x6a\xa1\xe9\x9c\x8b\xbe\x35\x97\xf4\xa3\x65\x9b\x6b\x51\xec\x73\xc9\xc8\xe5\xc1\x4d\x2c\x1d\x6e\x61\xa8\x9b\x8c\x5c\x1b\x55\x2d\x5c\x6f\xc7\x57\x85\x5f\xc7\x0c\x53\x63\xfa\x90\x51\xbb\x20\xa3\x31\xa6\xf0\xc7\x35\xb5\x8b\xc3\x61\x2c\x8d\x45\x86\x55\xb9\x05\xe0\x18\xd3\x3f\x5c\xe3\x91\xd3\xd3\x38\xc7\x87\x2c\xe0\x1b\xfb\xe7\x83\xf2\x8b\xe6\x2a\x80\x45\x45\x3b\xc1\xe0\xd1\x31\x23\xb4\xdc\x0a\x8c\x29\x78\xe3\x9e\x0f\x9d\x84\x35\x83\x91\x62\xbd\xa6\x05\xa3\xf7\xea\xe8\x53\xd1\x07\x51\x24\x63\x00\x79\xe8\x74\xac\x9b\xac\xa3\xdc\x91\x92\xde\xb1\xe3\x4f\x4a\xb7\x0c\xc6\x9c\xbc\x74\x13\xf8\x81\x53\xb2\x32\x17\x31\xd6\x2a\x5a\x20\x3a\x97\x7c\x3e\x1e\x31\xc1\xda\xcc\xe8\x09\x1e\x3a\x17\x1d\xb1\x66\x2a\xd6\x6b\xb6\x40\xfc\xff\x48\x44\xa7\x96\xda\xc8\xf1\x8d\x2f\x40\xe7\xad\x92\xf0\x2b\x95\xf0\x0a\xce\x7e\x38\x3f\xfd\xfe\xfc\xf4\x07\x78\x3b\xb9\x81\x57\xa7\xa7\xff\xe8\x1e\x96\x72\x74\xa7\x46\xb9\xa8\xd9\x42\x39\xba\xfc\xf5\x29\x37\x02\x9c\x5a\x09\x53\x2b\x7b\x53\xa1\x66\x9f\xfc\x53\x71\x2c\x13\xa3\x35\xf9\x74\xc9\xab\x28\x26\xa1\xf8\x59\x2e\x0f\xfa\xce\xc9\x96\x23\x9b\x96\x53\xbc\x66\xd5\x66\xb1\x79\xe8\x04\xf1\xe0\xe9\xfb\x17\x1e\x3c\x31\x4c\x69\x2e\xda\x82\xd8\x71\xf0\x74\x83\xc6\xc2\x18\x4d\x2e\x5a\x8f\x1d\xdb\x7b\xef\x3a\x7a\xda\x7d\x30\xeb\xf3\xcb\xa2\xb1\x1f\x51\x6b\xa5\x49\x71\x50\xc8\xb8\xc9\x04\x7d\x3c\x97\x4a\xe2\x05\x19\xed\xa2\xbd\x6f\x72\x3c\xff\xfa\x79\x7f\x34\xa6\x7e\x5b\xf7\xfc\xeb\xb4\xcf\xab\x54\xa9\xde\x92\x3a\x5f\x3d\x4e\xff\x1d\xff\x45\xdf\xee\xf7\x8e\xd3\xab\x3e\x96\x38\xfd\xde\x24\xee\x8d\x0e\x10\x6b\x54\x7f\x2c\xd1\x32\xff\xf5\xf8\xf2\x45\x5f\x8b\xf7\x8e\x35\x28\x3f\x96\x50\x25\x3e\xd8\x8c\xce\x91\x8c\xde\xe1\x83\x85\x6b\x3a\xc7\x97\x9d\x56\xed\x1d\x77\x65\xe9\xf0\xb1\x4f\x73\x6b\x95\xac\x6c\x87\x32\xd9\xbe\x9e\x95\xb3\xbd\x9b\xc1\x07\xfd\x20\xbf\x97\xa3\xcf\xaf\x4f\x9b\xa1\x7c\xee\x35\xc7\x0b\xd7\x8b\xbd\x49\xcd\x34\xbd\x17\xcf\xa3\x2a\x5d\x7d\xa3\xf4\x0c\xe1\xb5\xeb\x75\x20\x62\x4f\xee\x99\x06\xdf\xf4\x7a\x90\xf4\xb5\xba\x87\x5e\xaf\x68\x08\xfb\x85\x9a\x40\x3f\x29\x2f\x69\xbd\xd8\xc0\xcc\x34\xcf\x6c\x2d\x2d\xfb\x7f\xd2\x3b\x1a\x6a\xc9\xe8\x24\xcd\xa5\xbf\xbc\x01\x83\x9a\x53\xc1\xff\xed\xb7\x5d\x9d\x2e\xac\xbc\x85\x14\x86\xf0\xd7\x0e\xf9\x4b\xe3\xbe\xa7\x9b\x94\xc2\x3f\x6a\x4d\x1f\x3b\x5d\x2f\xab\x60\x08\xab\x70\xbf\x96\x2a\x0d\x1d\x3e\x3c\xbd\x00\x0e\x03\x48\x13\x81\x72\x6e\x17\x17\xc0\xbf\xfb\xae\xd0\xec\x7b\xbc\x4f\xdf\xf3\x0f\xef\xc3\x9d\xc9\x87\x0f\x30\x84\x50\xf6\x5b\x29\xf2\xe1\xc2\x0b\x06\x8d\x1a\x6d\xae\x25\xa8\x93\xf5\x49\xcd\xe7\x85\xba\xff\x99\x33\xfc\xc9\xed\x00\x3a\xda\xef\x3d\x0a\xfd\xa8\x75\xf4\xbd\xb6\x49\xe8\x06\x95\x3c\x85\x28\x9d\xf8\xae\xf0\xcd\x70\x08\x84\xd4\x5d\x43\xad\x13\x47\xab\x21\x17\xbb\x17\xed\xce\x7c\x27\xd6\xad\xc3\xe5\x72\x53\xc1\x82\x33\x2c\x05\x1a\x9e\x5b\xbe\x44\x63\xe9\x32\xbb\x51\xb7\x37\xaf\x27\x56\x73\x39\xef\x58\x53\x78\x10\xa3\x95\x78\x0f\x6e\x26\xee\x58\x03\x7f\x83\xb3\xd3\xd3\xd3\x6e\x62\x6b\x1d\xba\x17\x0d\xa5\xdc\x5c\x6b\x34\x28\x6d\xc7\x2e\xb8\x9c\x6f\x28\x0b\x95\x3e\xd4\x5c\x86\x5f\x03\x30\xf8\xf6\x5b\xa8\xaa\x65\x2e\xc4\x86\xca\x7b\xcd\x2d\xba\x79\x21\x6c\xec\x36\x18\xb7\xf2\xaf\x10\x57\xfe\x44\x88\x41\x49\xb7\xce\xb9\x1c\x20\xb7\xb5\xe9\x26\x77\x54\x34\x85\x93\x31\xa6\x35\xec\xa5\xb8\xdb\x21\xb4\x89\xdf\x8e\xaf\xda\xc4\xc3\x22\xdb\xd6\xc1\x2f\xeb\x6d\x5d\xfc\x5a\xd5\xd6\xe3\x3a\x9f\x0a\x6e\x16\xc8\xda\x7a\x95\x33\x7d\xa3\xa7\x5b\x5f\x2a\xcf\x9a\xa9\x30\xe5\x92\x39\xc2\x3f\x53\xc9\x04\xea\xf2\xd5\x2b\x55\xc6\x59\xa9\x9b\xcc\x04\x9f\x7d\xea\x14\x1d\x3b\x0d\x8c\x09\xfd\x93\x3e\x74\x56\x8d\x19\x25\x5c\xdb\x9e\x43\xb8\xb7\xfd\x7b\xa3\x2d\xd7\xe2\x1c\xaa\x0b\x5b\x67\x68\x43\x82\x51\x4b\xcf\x37\xa7\x85\x52\x62\xdd\x4d\x98\x92\x58\x79\xd3\xcc\x8c\xe2\x6f\x33\x7f\x7e\x9d\xfc\xf6\x2e\xc9\xa8\x36\x58\x74\xa8\x41\x5c\x17\x7c\x36\x92\xd0\x11\xf2\x13\xae\x9f\x6f\xdb\x38\x35\xa6\xef\x83\x82\xf2\x96\x5a\x49\x11\xce\x86\x4f\xef\xbd\xb7\x03\xdb\x44\x25\xd4\x8c\xba\x86\x44\xa3\x50\x94\x75\xb6\x83\x79\x92\x31\x17\x27\x5b\x10\x5d\x9c\x0c\xfa\x61\xaa\x1f\xb5\xfd\xcc\x27\x55\xca\xc6\x9f\xf9\x94\xd7\x8a\xff\x0d\x00\x00\xff\xff\x0a\x31\x20\xb3\x2b\x24\x00\x00")

func admin_detailsGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_detailsGohtml,
		"admin_details.gohtml",
	)
}

func admin_detailsGohtml() (*asset, error) {
	bytes, err := admin_detailsGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_details.gohtml", size: 9259, mode: os.FileMode(436), modTime: time.Unix(1500547710, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_footerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4c\xc9\xcd\xcc\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\x52\xa8\xad\xe5\xb2\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x56\x48\xcd\x4b\x51\xa8\xad\x05\x04\x00\x00\xff\xff\x63\x72\x54\xe0\x35\x00\x00\x00")

func admin_footerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_footerGohtml,
		"admin_footer.gohtml",
	)
}

func admin_footerGohtml() (*asset, error) {
	bytes, err := admin_footerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_footer.gohtml", size: 53, mode: os.FileMode(436), modTime: time.Unix(1499954457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_headerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x6f\x53\xdb\xc6\x13\x7e\xcf\xa7\xd8\xdc\xef\x45\x7e\xa5\x95\x14\x30\xad\x29\xb1\x3c\x43\x0c\x01\x92\x26\x10\x30\xa4\x74\x3a\xd3\x59\xdf\xad\xa4\x33\xd2\x9d\xb8\x3b\xc9\x56\x1d\xbe\x7b\xe7\x2c\x0b\x63\x42\x67\xfa\x4a\xde\xff\xcf\xb3\xcf\x79\x17\x0b\x10\x94\x48\x45\xc0\x50\x14\x52\xfd\x95\x11\x0a\x32\x0c\x1e\x1e\xb6\x06\xaf\x8e\xce\x47\xe3\xdb\x8b\x63\xc8\x5c\x91\x0f\xb7\x06\xfe\x03\x39\xaa\x34\x66\xa4\xd8\x70\x0b\x60\xe0\xd3\xfd\x0f\x80\x41\x41\x0e\x81\x67\x68\x2c\xb9\x98\x55\x2e\x09\xf6\xd9\xd3\x50\xe6\x5c\x19\xd0\x7d\x25\xeb\x98\xfd\x1e\x5c\x1f\x06\x23\x5d\x94\xe8\xe4\x24\x27\x06\x5c\x2b\x47\xca\xc5\xec\xec\x38\x26\x91\xd2\x46\xa5\xc2\x82\x62\x56\x4b\x9a\x95\xda\xb8\x27\xc9\x33\x29\x5c\x16\x0b\xaa\x25\xa7\x60\x69\xfc\x04\x52\x49\x27\x31\x0f\x2c\xc7\x9c\xe2\x9d\xae\xd1\xab\x20\x80\x71\x46\x80\x13\x5d\x13\xf4\x60\xd9\xd8\x61\x6a\x61\xbb\xa8\xac\xdb\x06\xae\x0b\x82\x44\x1a\xeb\x40\x2a\x70\x19\x81\xe7\xf6\x16\x50\x35\xa0\x5d\x46\x66\x69\x77\xb3\xc1\x17\xb5\x35\xdb\x98\x38\x32\xdb\xbe\xc4\x52\xdb\x32\x08\xbe\x87\x2f\xc8\x72\x23\x4b\x27\xb5\x7a\xc2\xe0\x05\x9e\x58\xb9\x4c\x9b\x17\x72\x72\xa9\xee\xc0\x50\x1e\x33\xc9\x7d\x93\xcc\x50\x12\xb3\x30\x8c\xc2\x30\x4a\xb0\xf6\xce\x50\x72\xdd\xa5\x3b\xe9\x72\x1a\xbe\x37\x64\xb3\x91\x2e\x24\xb7\x30\x32\x38\xcb\xc9\x0c\xa2\x36\xb4\x5e\xcc\x3b\xad\x9d\x75\x06\x4b\xe0\xda\x10\x8c\xae\xae\xd6\x14\xd6\x53\xad\x6b\x72\xb2\x19\x91\xeb\x66\x7b\x49\xed\x41\x14\x15\x38\xe7\x42\x85\x93\xae\x8d\x37\xb8\x2e\xa2\x47\x47\xd4\x0b\x7b\x61\x3f\xe2\xd6\xae\x7d\x61\x21\x55\xc8\xad\x65\x20\x95\xa3\xd4\x48\xd7\xc4\xcc\x66\xd8\xdb\xdf\x0b\xde\xdd\xdc\x4a\x79\x75\xf6\x9e\x3e\xee\x88\x93\xe2\xc3\xe5\xe1\x5d\xc3\xab\xd3\xc3\xd3\xcb\xb4\xb7\x7b\x5e\x5c\xf3\xd9\xac\xaf\x55\xef\xf2\x56\xa4\x7b\x37\xf8\xe3\x45\x71\x35\xb6\x7f\x47\x1f\x7f\xd9\xaf\x27\xe2\x78\x9a\xed\x55\x0c\xb8\xd1\xd6\x6a\x23\x53\xa9\x62\x86\x4a\xab\xa6\xd0\x95\xed\x76\xd3\x4a\x01\xd6\xf0\x35\x09\x9c\xe2\x3c\x4c\xb5\x4e\x73\xc2\x52\xda\x25\x01\xef\x8b\x72\x39\xb1\xd1\xf4\xbe\x22\xd3\x44\x3b\xe1\xce\x6e\xb8\xb7\xb2\x96\x0c\xa6\x96\x0d\x07\x51\xdb\x70\xa3\xfb\x70\x26\x95\xd0\xb3\x70\xfa\xc5\xe7\xc2\xb7\x6f\x20\x34\xaf\x0a\x52\x2e\x9c\x19\xe9\xe8\xff\xaf\x37\x60\xb4\x3a\xa2\xb5\xe4\x6c\x34\xb5\x51\x4d\x4a\x68\xf3\xdd\xa4\x3f\xbb\x51\xaf\x7f\x78\x71\xea\x26\xa7\xff\x2a\xcc\xf4\xb9\x2e\xd3\x17\x65\x19\xf3\x9f\xcf\xbe\xc8\xc9\x9b\xdd\xfe\x7d\xdd\x4c\xaf\x3e\x25\xa7\xd3\xf3\x4f\xf8\xdb\x5d\x52\x7d\xbd\x99\xff\x31\xbf\xbe\x50\xa3\x0f\x87\xfd\x7c\xb7\x18\x7d\xfd\x7c\x56\x9e\xfc\x5a\x9c\x8c\x8e\xf6\x67\x27\x9f\xcf\xf8\xc5\x51\x7f\x3c\xc7\x7f\x97\xe5\x39\x17\xff\xd4\xc0\x35\x25\xc5\xcc\xd1\xdc\xf9\x97\xb3\xd2\x6e\xa2\x45\x03\x0b\x28\x51\x08\xa9\xd2\xc0\xe9\xf2\x00\xfa\x6f\xca\xf9\x5b\x78\x58\xc6\xa5\x2a\x2b\x07\x0b\x48\xb4\x72\x41\x82\x85\xcc\x9b\x03\x28\xb4\xd2\xb6\x44\x4e\x5d\xd6\x20\x5a\x8e\x58\xde\xb0\xa8\x3b\x62\x03\xdf\x7b\x85\x40\x61\x0d\x3c\x47\x6b\x63\xa6\xb0\x9e\xa0\x81\xf6\x13\x48\x55\x93\xb1\xd4\x99\x89\x9c\x93\xf0\x28\x56\xf0\x00\x06\x42\x3e\x96\xfa\xff\x30\x4a\x45\xe6\x31\xba\x19\x5f\x35\x59\x1d\xdd\x75\x8e\xc7\x52\x39\xa7\xd5\x6a\x07\xad\xc1\x9e\x95\x39\x9d\xa6\x39\x01\xd7\x79\x8e\xa5\x25\xc1\x40\xa0\xc3\x95\xdb\x0f\x6f\xfd\x9d\x1b\x4d\xea\x2f\xf3\xff\xda\x6a\x06\x68\x24\x06\x34\x2f\x51\x09\x12\x31\x4b\x30\xf7\xb9\x4b\xaf\xc7\x6d\x74\xfe\x38\x6a\x03\x9a\xd7\xa7\x44\xd5\x81\xb1\x26\xd0\x2a\x6f\xd8\x70\xdc\xc2\x51\x58\xcb\x14\xfd\x9d\x1b\x44\x3e\x6f\x83\x55\xd4\x32\xd9\xf0\xe1\x33\x5a\x13\x83\x4a\x74\x27\x26\x62\x2f\x9f\x30\x7c\xb2\xd0\x48\xc8\xfa\x71\xfb\x6b\x63\x10\x29\xac\x87\x5b\x8b\x05\x90\x12\xf0\xf0\xf0\x4f\x00\x00\x00\xff\xff\x83\xf4\x8a\x59\xec\x06\x00\x00")

func admin_headerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_headerGohtml,
		"admin_header.gohtml",
	)
}

func admin_headerGohtml() (*asset, error) {
	bytes, err := admin_headerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_header.gohtml", size: 1772, mode: os.FileMode(436), modTime: time.Unix(1499954457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_indexGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x3d\x6f\xdb\x30\x10\xdd\xfb\x2b\xae\xb7\xd3\x5a\x3a\x74\x90\xbc\x34\x4b\x97\xb4\x40\xba\x17\xb4\x79\xb2\x0e\x20\x8f\x2a\x75\x72\x12\x08\xfa\xef\x05\x15\xc7\x70\x64\x36\x46\xb3\x08\x27\xbe\x77\xdf\x8f\x9c\x26\x70\xd4\xb2\x10\xa0\x75\x81\xe5\x37\x8b\xa3\x27\x84\x79\xfe\x34\x4d\xa0\x14\x7a\x6f\xf5\x0c\x76\x64\x1d\xa5\x05\x05\x00\xa8\x1d\x1f\x61\xef\xed\x30\x34\xb8\x8f\xa2\x96\x85\x12\x6e\x17\x6c\x8d\xf7\x56\xc8\xc3\xf2\x35\x7d\xe2\x60\xd3\xf3\x05\xb3\xc8\x36\x39\x1d\xcb\x01\xb7\xdf\x12\xe5\x2a\xee\xe9\x11\x1e\x58\xe9\x8e\xda\xba\x72\x7c\xbc\xe5\xbf\x8b\x6e\x9d\x64\x4d\x4c\xf1\xb1\xc0\x58\x58\x6d\x4c\xe1\x95\x96\x6d\xc3\xe2\x59\x08\x21\x90\x76\xd1\x35\xf8\xf3\xc7\xc3\x2f\x04\xbb\x57\x8e\xd2\x60\x35\xb0\x92\xa3\xb6\x12\xfa\x57\xc8\xeb\x99\x79\x33\x04\xf3\xf5\x1d\xfa\xe2\xc2\xd2\x8f\xba\x76\x82\xe5\xd4\x0c\x01\x21\xd1\x9f\x91\x13\x39\xd0\xe7\x9e\x1a\x54\x7a\x52\x04\xb1\x81\x1a\xcc\x5f\x84\xde\xdb\x3d\x75\xd1\x3b\x4a\x0d\x9e\x26\x08\xf7\x19\x7a\xa7\xd0\xeb\x09\xdf\xe8\xe3\xcb\x7f\xf5\xb1\x53\x81\x9d\xca\x59\x0c\xa7\xe2\x87\x71\x17\x58\x11\x8e\xd6\x8f\xd4\xe0\xcb\xe6\x3f\x56\x66\x5d\xe5\xb5\x15\xf6\x5f\xd0\xce\xdb\xa3\xf5\x6f\x97\xaa\xb2\xaa\xaf\xe5\x73\x89\x7a\x1e\xd4\x1c\x52\x1c\xfb\x42\x03\xd3\x04\xc9\xca\x81\x60\xf3\x7a\x9d\xde\x84\xb1\xd7\x41\x0c\x2b\x05\x84\x2e\x51\x7b\x21\xb7\x69\x82\xcd\xf7\x3b\x98\x67\xdc\x66\x33\x6f\x15\xe6\xb9\xae\x6c\x31\x25\x89\x5b\xa7\xab\xab\xd1\x17\x5b\x7f\x31\xeb\xcf\xc6\x40\xb5\x39\xdf\x6f\x30\x66\x5b\x7a\x1b\xda\x18\xf5\xf4\x36\x9c\xf3\xfc\x0d\x00\x00\xff\xff\x49\x58\xeb\x43\x5e\x04\x00\x00")

func admin_indexGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_indexGohtml,
		"admin_index.gohtml",
	)
}

func admin_indexGohtml() (*asset, error) {
	bytes, err := admin_indexGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_index.gohtml", size: 1118, mode: os.FileMode(436), modTime: time.Unix(1500537198, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin_details.gohtml": admin_detailsGohtml,
	"admin_footer.gohtml": admin_footerGohtml,
	"admin_header.gohtml": admin_headerGohtml,
	"admin_index.gohtml": admin_indexGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"admin_details.gohtml": &bintree{admin_detailsGohtml, map[string]*bintree{}},
	"admin_footer.gohtml": &bintree{admin_footerGohtml, map[string]*bintree{}},
	"admin_header.gohtml": &bintree{admin_headerGohtml, map[string]*bintree{}},
	"admin_index.gohtml": &bintree{admin_indexGohtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

