// Code generated by go-bindata.
// sources:
// web/templates/admin_details.gohtml
// web/templates/admin_footer.gohtml
// web/templates/admin_header.gohtml
// web/templates/admin_index.gohtml
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admin_detailsGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\xed\x6f\xdb\xb8\x19\xff\x9e\xbf\xe2\x39\x6e\x38\xd8\xbb\x59\x6a\x0f\xfb\x14\xdb\x1a\x82\xf6\x8a\xbb\x21\xeb\x15\x71\xb2\x3b\xa0\x28\x0a\xda\x7a\x64\xf3\x4a\x91\x02\x49\x25\xf1\x79\xfe\xdf\x07\xbe\xc8\x7a\x89\x9c\xd4\x43\xbc\x78\xd7\x0f\xae\x48\x3e\xaf\x3f\xfe\xc8\x87\x12\xb3\xd9\x40\x8a\x19\x13\x08\x84\xa6\x39\x13\x9f\x53\x34\x94\x71\x4d\x60\xbb\x3d\xdb\x6c\xc0\x60\x5e\x70\x6a\x76\xc3\x2b\xa4\x29\x2a\x37\x3a\x49\xd9\x2d\x2c\x38\xd5\x7a\x4a\x16\x52\x18\xca\x04\xaa\x51\xc6\x4b\x96\x92\xe4\x0c\x00\x60\xb2\x7a\x9d\x6c\x36\x10\xcd\x98\xc1\xb7\x98\x45\xef\x69\x8e\xb0\xdd\x4e\xe2\xd5\xeb\x4a\x40\xc5\xfe\x69\xb3\x01\x96\x81\x40\x88\xfe\x89\x5a\xd3\x25\x02\x71\x4e\x20\xfc\xf3\xe3\xd1\xac\x5c\x2c\x50\xeb\xe6\x88\xb3\xd3\x08\x85\x72\x54\x06\xdc\xef\x48\x7b\x71\xe2\xa2\xa8\x0c\xdb\x00\x52\x76\x9b\x34\x6d\x23\xd7\xf8\xb5\x46\x53\x2a\x96\xa8\xbe\xc2\xa6\x48\x2b\x93\xed\x56\xd3\xb0\x92\x77\xa4\xd6\x6a\x43\xca\x47\x3a\x1f\xbd\xfe\xbe\x31\xee\x65\xfc\x0c\x75\x7a\x75\x99\xe7\x54\xad\x41\x9b\x35\xc7\x29\xc9\xa4\x30\x23\xcd\x7e\xc7\x73\xf8\x1e\xf3\x31\x49\x7e\xb8\x45\x61\xf4\x24\x0e\x72\x1d\x6d\x43\xe7\x1c\x2b\xcf\xbe\xe1\x7e\x47\xda\x28\x56\x60\x1a\x5a\x2b\x79\x6b\x33\x6f\xe9\x86\xfc\x94\x45\x05\x22\xef\xa6\x0b\x65\xed\x47\x25\x13\x93\x3a\xe8\x9c\xe4\xf5\xba\xf0\xe0\x99\xd4\x0e\xb4\xa2\xcf\x68\xce\xf8\xfa\x1c\x72\x29\xa4\x2e\xe8\x02\xc7\xa4\x56\xfc\x49\x64\xf2\x50\xc5\x37\x0a\xa9\xc1\xf4\xc2\xc0\xbf\x21\xa5\x06\x0d\xcb\x6b\xe7\xb1\x51\x0f\xf3\x7a\x38\x77\xad\x6c\x62\x87\xca\x43\xb5\x09\x05\x43\xd5\x12\xcd\x94\x7c\x9e\x73\x2a\xbe\x10\x58\x29\xcc\xa6\x24\xd6\xcc\x60\x8a\x59\xdc\x5c\x15\x3f\xbd\x85\xed\x36\x46\x07\x1c\x49\xfe\xc5\xf0\x0e\x2e\x38\x9f\xc4\xb4\x33\x47\xf1\x83\x89\x6f\x70\xae\xf9\xb8\x52\x10\x56\xd5\x31\x98\xf6\x55\x6c\xbb\x29\x2c\xc0\xfb\xe8\x06\xcf\x40\x39\x68\xd1\x2e\xf8\xdb\xc7\x3b\x68\x70\x6f\x42\xc3\x64\xd8\x39\xb8\xb9\xba\x84\xed\x96\x74\xa7\xcb\xd1\xe5\x9a\x19\xee\xf9\x41\x93\x83\x78\x76\x85\xd9\xa1\xd4\x9c\x21\x8a\xd3\xe4\x65\xe9\x91\xfd\xa3\x10\xf3\xad\x2d\x76\xcc\x30\x29\x1e\xe3\x66\x23\x86\x82\x0a\xe4\xa3\xb9\x4c\xd7\x7b\x48\x38\xc9\xa4\xca\x21\x47\xb3\x92\xe9\x94\x7c\xf8\x79\x76\x4d\x80\xa5\x53\x12\x20\xfd\x6c\x87\x09\xd0\x85\xf5\xf9\x18\xd2\x7b\xcc\x77\xe3\xb1\xe6\x46\x4b\x25\xcb\xe2\x11\x05\xa7\xc4\xe9\x1c\x79\xb3\x40\x2b\xc9\x47\xae\x93\x40\x26\x55\x1d\xa1\xa0\x39\x92\xc4\x16\xe7\xf3\x49\xec\x04\x9e\xb0\xcc\x44\x51\x9a\x56\x40\xc1\x3c\x01\xb3\x2e\x70\x4a\x0c\xde\x9b\x36\x0a\xce\x07\xd8\xdf\x29\xf1\xcf\xb7\x94\x97\xe8\x57\x61\xe7\x7c\xf0\x18\x12\xed\x2a\xfb\xbf\x06\x4a\x67\x77\x24\x79\x3f\x7b\xf7\xcb\xdf\x9f\x09\xa8\xc5\x0a\x17\x5f\xe6\xf2\xbe\x03\x96\xf5\x53\x81\xe5\x9e\x03\x58\x46\x95\x48\x76\x67\xa1\x0a\xb5\xd9\xbb\x5f\x60\xbb\x05\x67\x0b\xd3\x7a\x63\x78\xae\xb4\x2d\x77\x6f\x91\x24\x17\xee\xff\xe3\xa6\x1e\x7c\x85\xe4\xab\xd6\x63\xe9\xfb\xa8\x0e\x04\xe0\x65\x79\xa4\x0d\x55\xa6\x54\x9c\x24\x33\xfb\x04\x37\x57\x97\xcf\xb5\xf2\xac\xd5\x16\xa0\x3b\x5f\x01\xd2\xba\xdd\xb3\x00\x5d\x38\xa1\x26\x9e\x2a\x78\x9c\x6a\x13\x66\x9a\x1a\x92\x5c\x52\x6d\xe0\x4d\x98\xf9\x0b\xf3\x5c\x38\x56\x75\x98\x80\x42\x9a\x4a\xc1\xd7\x2d\x54\xdb\x41\x04\x68\x3b\x9d\x3d\xf8\xda\x60\x43\xac\xdd\x6a\x7f\xb2\x78\x97\x8a\x57\x2f\x81\x24\xb1\xdc\xb8\x0e\xad\xe3\x15\x8b\xa6\xcb\x80\x6d\xab\xab\x07\xd9\x9b\xab\xcb\x2a\xae\x53\x06\x53\x61\x76\x5f\x50\xb3\x22\x89\x3d\x24\xfe\xfa\x81\x9a\xd5\xf1\x60\xdc\x39\x0b\x18\xd6\xed\x1e\x00\xaf\x30\xfb\xd5\x0e\x9e\x38\x7a\x0a\x97\x78\x5f\x78\xf8\xae\xdc\xf3\x51\xf1\x0b\xee\x6a\x00\xab\x8e\x7e\x04\x7d\x44\xa7\x0c\xa1\xb1\x2f\x35\x81\x82\xfe\x05\xe7\xc8\x24\x6c\x38\x0c\x28\x36\x7b\x7a\x60\x74\x51\x9d\x3c\x15\x5d\x12\x15\x19\x3d\x90\xc7\xa6\x63\xd3\x65\x13\xca\x47\x28\xe9\x02\x7b\x31\x52\xb6\x72\x9c\x1b\x01\x73\x23\x46\x73\x2e\x17\x5f\xdc\x53\xa1\x98\x7d\xfd\xaa\x12\xd6\xe5\x3c\x67\x75\xd9\x9c\xf9\xe6\x7f\x15\xf2\x24\xb6\x41\xf6\xbc\xd7\x3d\x54\xf9\xbf\x7a\x79\xbd\x46\x6d\xe0\x0a\x75\xc9\xf7\x7e\xc9\xeb\x46\xd1\xf3\xe1\xd2\x91\xca\xa0\x36\x9f\x51\x29\xa9\x48\xe5\x2e\x65\xba\xe0\x74\x7d\x2e\xa4\xc0\x31\x49\xf6\xe0\x7b\x10\x15\x9e\x5e\x4f\x2e\x0e\x85\x99\xdb\xd1\x1f\x5f\x3b\x87\xac\x99\xda\xec\xd7\x90\xe0\x58\x79\xb9\x23\xfe\x93\x87\xfb\x83\xf3\x72\x66\x5f\x32\x2f\xb7\xed\x84\x6d\xef\x99\x73\x0b\xa6\x5f\x32\xbb\xd4\x9d\x74\xdf\x3e\x79\xc2\x3d\x38\x37\x6f\xf8\x25\x53\x13\x78\x6f\x0a\xba\x44\x92\xbc\xc7\x7b\x03\x1f\xe8\x12\x9f\x7e\xf9\x3c\x38\xcf\xda\xcb\x71\x72\x9d\x97\xc6\x48\x51\xfb\xf3\x6d\xf2\x74\xa5\x71\x1b\xe8\x24\xf6\xf2\xa7\x51\x1e\xfe\xf6\x60\xa3\xed\x17\xda\x7b\x33\xf5\x28\x5c\x4d\xa8\x16\x8a\xde\xf1\x03\xb0\x7a\x27\xd5\x02\xe1\x8d\xd5\xea\x87\xac\x1b\x77\x17\x97\xc9\x37\xa3\x11\x44\xb1\x92\x77\x30\x1a\x25\x67\x8d\xce\x38\xda\xdd\x17\xfa\x21\xbd\x50\xac\x30\x0d\x36\xc5\xbf\xd1\x5b\xea\x7b\x49\x72\x96\x95\xc2\x7d\x3e\x05\x8d\x8a\x51\xce\x7e\xc7\x77\x52\xe5\x83\x21\x6c\x9c\xbb\x0c\xa6\xf0\xe7\x01\xf9\x53\xeb\x8b\xeb\x30\xda\x09\x5f\x28\x45\xd7\x83\xa1\x93\x95\x30\x85\x8d\xff\x64\x9e\x49\x05\x03\x36\x7d\x35\x06\x06\x13\xc8\x22\x8e\x62\x69\x56\x63\x60\xdf\x7d\x57\x59\x76\x1a\x1f\xb3\x8f\xec\xd3\x47\xff\xd5\xf2\xd3\x27\x98\x82\x6f\xbb\x73\x0a\xf9\x34\x76\x82\xde\xa2\x42\x53\x2a\x01\xf2\x6c\x7b\xd6\x88\x79\x25\xef\x7e\x64\x29\xfe\x60\x8b\xed\x40\xb9\xea\x5d\xd9\x47\xa5\x42\xec\x8d\x7a\x3c\xf4\x26\x59\x06\x41\x3a\x72\xaa\xf0\xcd\x74\x0a\x84\x34\x43\x43\xa5\x22\x8b\x56\x4b\x2e\xa8\x57\xe3\xd6\xfd\x20\xf4\x6d\xfd\x3d\x67\xdb\xc0\x8a\xa5\xb8\x13\x68\x45\x6e\x58\x8e\xda\xd0\xbc\xb8\x96\x37\xd7\x6f\x66\x46\x31\xb1\x1c\x18\x5d\x45\x10\xb2\x15\x78\x07\x76\xb3\x1c\x18\x0d\x7f\x81\xd7\xaf\x5e\xbd\x1a\x46\xa6\xa1\x30\x1c\xb7\x8c\x32\xfd\x41\xa1\x46\x61\x06\x66\xc5\xc4\xb2\x63\xcc\x77\xba\x54\x4b\xe1\x2f\xa6\x53\xf8\xf6\x5b\xa8\xbb\x45\xc9\x79\xc7\xe4\x9d\x62\x06\xed\xd2\xf6\x47\xa3\x0e\xc6\xbd\xf8\xd7\x10\xd7\xf1\x04\x10\xbd\x91\x61\x13\xe7\xdd\x04\xd9\x13\xc5\x30\xba\xa5\xbc\x2d\x6c\x5f\xfd\x1a\xb0\xef\xc4\x6d\xa1\xee\x13\xbf\xb9\xba\xec\x13\xf7\xb5\xaf\x4f\xc1\x55\xda\x3e\x15\x57\x52\xfa\x34\xfc\x85\x52\x9f\xca\x6e\x77\x6e\xa9\xd9\x7a\x50\x87\xd5\xe6\xc1\x9c\x89\xd4\xc2\xfb\x23\x15\x29\x47\xb5\x5b\x77\x3b\x93\x61\x53\x19\x46\x0b\xce\x16\x5f\x06\x95\xe2\xa0\x85\x61\x44\x7f\xa3\xf7\x83\x4d\x6b\x0b\xf1\xb7\x26\xe7\xe0\xaf\x4d\xfe\xda\x1a\x2b\x15\x3f\x87\xfa\xbe\xc4\x3a\xea\x48\xa4\xd4\xd0\xf3\xee\x9e\xb0\x93\xd8\x0e\xa3\x54\x0a\xac\xa3\x69\xd3\xa2\xfa\xd7\x25\xcf\x3f\x66\x3f\xbf\x8f\x0a\xaa\x34\x56\x0a\x0d\x10\xb7\x15\x3e\x1d\x06\x5a\x84\xdc\x7e\xe9\xb6\xcb\x3e\x9c\x5a\xbb\xef\x51\x81\x72\x9e\x7a\x91\x22\x2c\x9d\x3e\xbc\x76\xda\x0f\x58\x17\x2a\x2e\x17\xd4\x0e\x44\x0a\xb9\xa4\xe9\x60\x3f\x30\x0f\x18\x33\x3e\xdb\x03\xd1\xf8\x6c\x12\xfb\x7d\x3e\xe9\xfb\x73\x93\x4c\x4a\x13\xfe\xdc\x64\xf7\x55\xff\x3f\x01\x00\x00\xff\xff\x6b\xa5\x64\x05\xb3\x22\x00\x00")

func admin_detailsGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_detailsGohtml,
		"admin_details.gohtml",
	)
}

func admin_detailsGohtml() (*asset, error) {
	bytes, err := admin_detailsGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_details.gohtml", size: 8883, mode: os.FileMode(436), modTime: time.Unix(1509366814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_footerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4c\xc9\xcd\xcc\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\x52\xa8\xad\xe5\xb2\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x56\x48\xcd\x4b\x51\xa8\xad\x05\x04\x00\x00\xff\xff\x63\x72\x54\xe0\x35\x00\x00\x00")

func admin_footerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_footerGohtml,
		"admin_footer.gohtml",
	)
}

func admin_footerGohtml() (*asset, error) {
	bytes, err := admin_footerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_footer.gohtml", size: 53, mode: os.FileMode(436), modTime: time.Unix(1509366814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_headerGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x6f\x53\xdb\xc6\x13\x7e\xcf\xa7\xd8\xdc\xef\x45\x7e\xa5\x95\x14\x30\xad\x29\xb1\x3c\x43\x0c\x01\x92\x26\x10\x30\xa4\x74\x3a\xd3\x59\xdf\xad\xa4\x33\xd2\x9d\xb8\x3b\xc9\x56\x1d\xbe\x7b\xe7\x2c\x0b\x63\x42\x67\xfa\x4a\xde\xff\xcf\xb3\xcf\x79\x17\x0b\x10\x94\x48\x45\xc0\x50\x14\x52\xfd\x95\x11\x0a\x32\x0c\x1e\x1e\xb6\x06\xaf\x8e\xce\x47\xe3\xdb\x8b\x63\xc8\x5c\x91\x0f\xb7\x06\xfe\x03\x39\xaa\x34\x66\xa4\xd8\x70\x0b\x60\xe0\xd3\xfd\x0f\x80\x41\x41\x0e\x81\x67\x68\x2c\xb9\x98\x55\x2e\x09\xf6\xd9\xd3\x50\xe6\x5c\x19\xd0\x7d\x25\xeb\x98\xfd\x1e\x5c\x1f\x06\x23\x5d\x94\xe8\xe4\x24\x27\x06\x5c\x2b\x47\xca\xc5\xec\xec\x38\x26\x91\xd2\x46\xa5\xc2\x82\x62\x56\x4b\x9a\x95\xda\xb8\x27\xc9\x33\x29\x5c\x16\x0b\xaa\x25\xa7\x60\x69\xfc\x04\x52\x49\x27\x31\x0f\x2c\xc7\x9c\xe2\x9d\xae\xd1\xab\x20\x80\x71\x46\x80\x13\x5d\x13\xf4\x60\xd9\xd8\x61\x6a\x61\xbb\xa8\xac\xdb\x06\xae\x0b\x82\x44\x1a\xeb\x40\x2a\x70\x19\x81\xe7\xf6\x16\x50\x35\xa0\x5d\x46\x66\x69\x77\xb3\xc1\x17\xb5\x35\xdb\x98\x38\x32\xdb\xbe\xc4\x52\xdb\x32\x08\xbe\x87\x2f\xc8\x72\x23\x4b\x27\xb5\x7a\xc2\xe0\x05\x9e\x58\xb9\x4c\x9b\x17\x72\x72\xa9\xee\xc0\x50\x1e\x33\xc9\x7d\x93\xcc\x50\x12\xb3\x30\x8c\xc2\x30\x4a\xb0\xf6\xce\x50\x72\xdd\xa5\x3b\xe9\x72\x1a\xbe\x37\x64\xb3\x91\x2e\x24\xb7\x30\x32\x38\xcb\xc9\x0c\xa2\x36\xb4\x5e\xcc\x3b\xad\x9d\x75\x06\x4b\xe0\xda\x10\x8c\xae\xae\xd6\x14\xd6\x53\xad\x6b\x72\xb2\x19\x91\xeb\x66\x7b\x49\xed\x41\x14\x15\x38\xe7\x42\x85\x93\xae\x8d\x37\xb8\x2e\xa2\x47\x47\xd4\x0b\x7b\x61\x3f\xe2\xd6\xae\x7d\x61\x21\x55\xc8\xad\x65\x20\x95\xa3\xd4\x48\xd7\xc4\xcc\x66\xd8\xdb\xdf\x0b\xde\xdd\xdc\x4a\x79\x75\xf6\x9e\x3e\xee\x88\x93\xe2\xc3\xe5\xe1\x5d\xc3\xab\xd3\xc3\xd3\xcb\xb4\xb7\x7b\x5e\x5c\xf3\xd9\xac\xaf\x55\xef\xf2\x56\xa4\x7b\x37\xf8\xe3\x45\x71\x35\xb6\x7f\x47\x1f\x7f\xd9\xaf\x27\xe2\x78\x9a\xed\x55\x0c\xb8\xd1\xd6\x6a\x23\x53\xa9\x62\x86\x4a\xab\xa6\xd0\x95\xed\x76\xd3\x4a\x01\xd6\xf0\x35\x09\x9c\xe2\x3c\x4c\xb5\x4e\x73\xc2\x52\xda\x25\x01\xef\x8b\x72\x39\xb1\xd1\xf4\xbe\x22\xd3\x44\x3b\xe1\xce\x6e\xb8\xb7\xb2\x96\x0c\xa6\x96\x0d\x07\x51\xdb\x70\xa3\xfb\x70\x26\x95\xd0\xb3\x70\xfa\xc5\xe7\xc2\xb7\x6f\x20\x34\xaf\x0a\x52\x2e\x9c\x19\xe9\xe8\xff\xaf\x37\x60\xb4\x3a\xa2\xb5\xe4\x6c\x34\xb5\x51\x4d\x4a\x68\xf3\xdd\xa4\x3f\xbb\x51\xaf\x7f\x78\x71\xea\x26\xa7\xff\x2a\xcc\xf4\xb9\x2e\xd3\x17\x65\x19\xf3\x9f\xcf\xbe\xc8\xc9\x9b\xdd\xfe\x7d\xdd\x4c\xaf\x3e\x25\xa7\xd3\xf3\x4f\xf8\xdb\x5d\x52\x7d\xbd\x99\xff\x31\xbf\xbe\x50\xa3\x0f\x87\xfd\x7c\xb7\x18\x7d\xfd\x7c\x56\x9e\xfc\x5a\x9c\x8c\x8e\xf6\x67\x27\x9f\xcf\xf8\xc5\x51\x7f\x3c\xc7\x7f\x97\xe5\x39\x17\xff\xd4\xc0\x35\x25\xc5\xcc\xd1\xdc\xf9\x97\xb3\xd2\x6e\xa2\x45\x03\x0b\x28\x51\x08\xa9\xd2\xc0\xe9\xf2\x00\xfa\x6f\xca\xf9\x5b\x78\x58\xc6\xa5\x2a\x2b\x07\x0b\x48\xb4\x72\x41\x82\x85\xcc\x9b\x03\x28\xb4\xd2\xb6\x44\x4e\x5d\xd6\x20\x5a\x8e\x58\xde\xb0\xa8\x3b\x62\x03\xdf\x7b\x85\x40\x61\x0d\x3c\x47\x6b\x63\xa6\xb0\x9e\xa0\x81\xf6\x13\x48\x55\x93\xb1\xd4\x99\x89\x9c\x93\xf0\x28\x56\xf0\x00\x06\x42\x3e\x96\xfa\xff\x30\x4a\x45\xe6\x31\xba\x19\x5f\x35\x59\x1d\xdd\x75\x8e\xc7\x52\x39\xa7\xd5\x6a\x07\xad\xc1\x9e\x95\x39\x9d\xa6\x39\x01\xd7\x79\x8e\xa5\x25\xc1\x40\xa0\xc3\x95\xdb\x0f\x6f\xfd\x9d\x1b\x4d\xea\x2f\xf3\xff\xda\x6a\x06\x68\x24\x06\x34\x2f\x51\x09\x12\x31\x4b\x30\xf7\xb9\x4b\xaf\xc7\x6d\x74\xfe\x38\x6a\x03\x9a\xd7\xa7\x44\xd5\x81\xb1\x26\xd0\x2a\x6f\xd8\x70\xdc\xc2\x51\x58\xcb\x14\xfd\x9d\x1b\x44\x3e\x6f\x83\x55\xd4\x32\xd9\xf0\xe1\x33\x5a\x13\x83\x4a\x74\x27\x26\x62\x2f\x9f\x30\x7c\xb2\xd0\x48\xc8\xfa\x71\xfb\x6b\x63\x10\x29\xac\x87\x5b\x8b\x05\x90\x12\xf0\xf0\xf0\x4f\x00\x00\x00\xff\xff\x83\xf4\x8a\x59\xec\x06\x00\x00")

func admin_headerGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_headerGohtml,
		"admin_header.gohtml",
	)
}

func admin_headerGohtml() (*asset, error) {
	bytes, err := admin_headerGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_header.gohtml", size: 1772, mode: os.FileMode(436), modTime: time.Unix(1509366814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_indexGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x3d\x6f\xdb\x30\x10\xdd\xfb\x2b\xae\xb7\xd3\x5a\x3a\x74\x90\xbc\x34\x4b\x97\xb4\x40\xba\x17\xb4\x79\xb2\x0e\x20\x8f\x2a\x75\x72\x12\x08\xfa\xef\x05\x15\xc7\x70\x64\x36\x46\xb3\x08\x27\xbe\x77\xdf\x8f\x9c\x26\x70\xd4\xb2\x10\xa0\x75\x81\xe5\x37\x8b\xa3\x27\x84\x79\xfe\x34\x4d\xa0\x14\x7a\x6f\xf5\x0c\x76\x64\x1d\xa5\x05\x05\x00\xa8\x1d\x1f\x61\xef\xed\x30\x34\xb8\x8f\xa2\x96\x85\x12\x6e\x17\x6c\x8d\xf7\x56\xc8\xc3\xf2\x35\x7d\xe2\x60\xd3\xf3\x05\xb3\xc8\x36\x39\x1d\xcb\x01\xb7\xdf\x12\xe5\x2a\xee\xe9\x11\x1e\x58\xe9\x8e\xda\xba\x72\x7c\xbc\xe5\xbf\x8b\x6e\x9d\x64\x4d\x4c\xf1\xb1\xc0\x58\x58\x6d\x4c\xe1\x95\x96\x6d\xc3\xe2\x59\x08\x21\x90\x76\xd1\x35\xf8\xf3\xc7\xc3\x2f\x04\xbb\x57\x8e\xd2\x60\x35\xb0\x92\xa3\xb6\x12\xfa\x57\xc8\xeb\x99\x79\x33\x04\xf3\xf5\x1d\xfa\xe2\xc2\xd2\x8f\xba\x76\x82\xe5\xd4\x0c\x01\x21\xd1\x9f\x91\x13\x39\xd0\xe7\x9e\x1a\x54\x7a\x52\x04\xb1\x81\x1a\xcc\x5f\x84\xde\xdb\x3d\x75\xd1\x3b\x4a\x0d\x9e\x26\x08\xf7\x19\x7a\xa7\xd0\xeb\x09\xdf\xe8\xe3\xcb\x7f\xf5\xb1\x53\x81\x9d\xca\x59\x0c\xa7\xe2\x87\x71\x17\x58\x11\x8e\xd6\x8f\xd4\xe0\xcb\xe6\x3f\x56\x66\x5d\xe5\xb5\x15\xf6\x5f\xd0\xce\xdb\xa3\xf5\x6f\x97\xaa\xb2\xaa\xaf\xe5\x73\x89\x7a\x1e\xd4\x1c\x52\x1c\xfb\x42\x03\xd3\x04\xc9\xca\x81\x60\xf3\x7a\x9d\xde\x84\xb1\xd7\x41\x0c\x2b\x05\x84\x2e\x51\x7b\x21\xb7\x69\x82\xcd\xf7\x3b\x98\x67\xdc\x66\x33\x6f\x15\xe6\xb9\xae\x6c\x31\x25\x89\x5b\xa7\xab\xab\xd1\x17\x5b\x7f\x31\xeb\xcf\xc6\x40\xb5\x39\xdf\x6f\x30\x66\x5b\x7a\x1b\xda\x18\xf5\xf4\x36\x9c\xf3\xfc\x0d\x00\x00\xff\xff\x49\x58\xeb\x43\x5e\x04\x00\x00")

func admin_indexGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_indexGohtml,
		"admin_index.gohtml",
	)
}

func admin_indexGohtml() (*asset, error) {
	bytes, err := admin_indexGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_index.gohtml", size: 1118, mode: os.FileMode(436), modTime: time.Unix(1509366814, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin_details.gohtml": admin_detailsGohtml,
	"admin_footer.gohtml": admin_footerGohtml,
	"admin_header.gohtml": admin_headerGohtml,
	"admin_index.gohtml": admin_indexGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"admin_details.gohtml": &bintree{admin_detailsGohtml, map[string]*bintree{}},
	"admin_footer.gohtml": &bintree{admin_footerGohtml, map[string]*bintree{}},
	"admin_header.gohtml": &bintree{admin_headerGohtml, map[string]*bintree{}},
	"admin_index.gohtml": &bintree{admin_indexGohtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

