---
- name: Ensure apt keys are present
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - https://www.postgresql.org/media/keys/ACCC4CF8.asc
    - https://nginx.org/keys/nginx_signing.key
  become: yes
  tags:
    - provision

- name: Ensure postgresql apt repository is present
  apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main
    state: present
    update_cache: no
  become: yes
  notify:
    - update apt cache
  tags:
    - provision

- name: Ensure nginx apt repository is present
  apt_repository:
    repo: deb http://nginx.org/packages/ubuntu/ xenial nginx
    state: present
    update_cache: no
  become: yes
  notify:
    - update apt cache
  tags:
    - provision

- meta: flush_handlers

- name: Ensure required packages are installed
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - postgresql-9.6
    - nginx
    - python-psycopg2
    - python-passlib
  become: yes
  tags:
    - provision

- name: Ensure freshcomics group is present
  group:
    name: "{{ freshcomics_group }}"
    state: present
  become: yes
  tags:
    - provision

- name: Ensure freshcomics user is present
  user:
    name: "{{ freshcomics_user }}"
    group: "{{ freshcomics_group }}"
    state: present
    home: "{{ freshcomics_home }}"
  become: yes
  tags:
    - provision

- name: Ensure freshcomicsdb is present
  postgresql_db:
    name: "{{ freshcomics_dbname }}"
    encoding: UTF-8
  become: yes
  become_user: postgres
  tags:
    - provision

- name: Ensure freshcomics DB user is present
  postgresql_user:
    db: "{{ freshcomics_dbname }}"
    name: "{{ freshcomics_user }}"
    password: "{{ freshcomics_dbpassword }}"
    state: present
    priv: ALL
  become: yes
  become_user: postgres
  tags:
    - provision

- name: Ensure database backups directory is present
  file:
    path: "{{ freshcomics_home }}/backup"
    state: directory
    owner: postgres
    group: "{{ freshcomics_group }}"
  become: yes
  tags:
    - provision

- name: Setup backups of freshcomicsdb
  cron:
    name: "{{ item.name }}"
    user: postgres
    minute: 0
    hour: 0
    job: "{{ item.job }}"
    state: present
  become: yes
  with_items:
    - name: "backup {{ freshcomics_dbname }}"
      job: "pg_dump {{ freshcomics_dbname }} | gzip - > {{ freshcomics_home}}/backup/{{ freshcomics_dbname }}_$(date +%Y%m%d%H%M%S).pg.gz"
    - name: "prune old {{ freshcomics_dbname }} backups"
      job: "find {{ freshcomics_home }}/backup/{{ freshcomics_dbname }}_*.pg.gz -mtime +7 -delete"
  tags:
    - provision

- name: Ensure default nginx.conf is absent
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  become: yes
  notify:
    - restart nginx
  tags:
    - provision

- name: Ensure custom default nginx conf is present
  copy:
    src: nginx_default.conf
    dest: /etc/nginx/conf.d/_.conf
    owner: root
    group: root
    mode: 0644
  become: yes
  notify:
    - restart nginx
  tags:
    - provision

...